/************************************************************************************************************
*  COPYRIGHT BY ZIGGY RAFIQ (ZAHEER RAFIQ)
*  LinkedIn Profile URL Address: https://www.linkedin.com/in/ziggyrafiq/ 
*
*  System   :  	ZR Demo Project 01 - Book Api
*  Date     :  	25/09/2022
*  Author   :  	Ziggy Rafiq (https://www.ziggyrafiq.com)
*  Notes    :  	
*  Reminder :	PLEASE DO NOT CHANGE OR REMOVE AUTHOR NAME.
*
************************************************************************************************************/


// <auto-generated />
using System;
using ZR.Infrastructure.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ZR.Infrastructure.Migrations
{
    [DbContext(typeof(DbEntities))]
    [Migration("20220731175102_IsDbAddedFakeCompanies12DigsZR1")]
    partial class IsDbAddedFakeCompanies12DigsZR1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ZR.Infrastructure.Models.Address", b =>
                {
                    b.Property<Guid>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityorTown")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHardDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSoftDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("ZR.Infrastructure.Models.Company", b =>
                {
                    b.Property<Guid>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CompanyId");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHardDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSoftDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RegistrantType")
                        .HasColumnType("int");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrandingAs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            CompanyId = new Guid("e04220d4-e823-4138-8c6a-30058bb65fb7"),
                            CompanyName = "Wonka Industries",
                            IsActive = true,
                            IsHardDeleted = false,
                            IsSoftDeleted = false,
                            RegistrantType = 1,
                            RegistrationNumber = "469903960",
                            TrandingAs = "WI Ltd"
                        },
                        new
                        {
                            CompanyId = new Guid("0be7a761-f9ae-4ed1-9e68-447fc0737104"),
                            CompanyName = "Acme Corp",
                            IsActive = true,
                            IsHardDeleted = false,
                            IsSoftDeleted = false,
                            RegistrantType = 12,
                            RegistrationNumber = "343305255",
                            TrandingAs = "Acme Corp"
                        },
                        new
                        {
                            CompanyId = new Guid("30be080d-ae46-422c-ab92-795fbac5b02f"),
                            CompanyName = "Stark Industries",
                            IsActive = true,
                            IsHardDeleted = false,
                            IsSoftDeleted = false,
                            RegistrantType = 9,
                            RegistrationNumber = "44220638",
                            TrandingAs = "Stark Ind"
                        });
                });

            modelBuilder.Entity("ZR.Infrastructure.Models.Contact", b =>
                {
                    b.Property<Guid>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHardDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSoftDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddletName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("ZR.Infrastructure.Models.DropDownList", b =>
                {
                    b.Property<int>("DropDownListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DropDownListId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DropDownListId"), 1L, 1);

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHardDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSoftDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DropDownListId");

                    b.ToTable("DropDownList");

                    b.HasData(
                        new
                        {
                            DropDownListId = 1,
                            GroupName = "Name-Group-Tiles",
                            IsActive = true,
                            IsHardDeleted = false,
                            IsSoftDeleted = false,
                            Name = "--Select Title--",
                            Value = ""
                        },
                        new
                        {
                            DropDownListId = 2,
                            GroupName = "Name-Group-Tiles",
                            IsActive = true,
                            IsHardDeleted = false,
                            IsSoftDeleted = false,
                            Name = "Master",
                            Value = "Master"
                        },
                        new
                        {
                            DropDownListId = 3,
                            GroupName = "Name-Group-Tiles",
                            IsActive = true,
                            IsHardDeleted = false,
                            IsSoftDeleted = false,
                            Name = "Mr",
                            Value = "Mr"
                        },
                        new
                        {
                            DropDownListId = 4,
                            GroupName = "Name-Group-Tiles",
                            IsActive = true,
                            IsHardDeleted = false,
                            IsSoftDeleted = false,
                            Name = "Miss",
                            Value = "Miss"
                        },
                        new
                        {
                            DropDownListId = 5,
                            GroupName = "Name-Group-Tiles",
                            IsActive = true,
                            IsHardDeleted = false,
                            IsSoftDeleted = false,
                            Name = "Mrs",
                            Value = "Mrs"
                        },
                        new
                        {
                            DropDownListId = 6,
                            GroupName = "Name-Group-Tiles",
                            IsActive = true,
                            IsHardDeleted = false,
                            IsSoftDeleted = false,
                            Name = "Ms",
                            Value = "Ms"
                        },
                        new
                        {
                            DropDownListId = 7,
                            GroupName = "Name-Group-Tiles",
                            IsActive = true,
                            IsHardDeleted = false,
                            IsSoftDeleted = false,
                            Name = "Sir",
                            Value = "Sir"
                        },
                        new
                        {
                            DropDownListId = 8,
                            GroupName = "Name-Group-Tiles",
                            IsActive = true,
                            IsHardDeleted = false,
                            IsSoftDeleted = false,
                            Name = "Dr",
                            Value = "Dr"
                        },
                        new
                        {
                            DropDownListId = 9,
                            GroupName = "Name-Group-Tiles",
                            IsActive = true,
                            IsHardDeleted = false,
                            IsSoftDeleted = false,
                            Name = "Prof",
                            Value = "Prof"
                        },
                        new
                        {
                            DropDownListId = 10,
                            GroupName = "Name-Group-Tiles",
                            IsActive = true,
                            IsHardDeleted = false,
                            IsSoftDeleted = false,
                            Name = "Lord",
                            Value = "Lord"
                        });
                });

            modelBuilder.Entity("ZR.Infrastructure.Models.Telephone", b =>
                {
                    b.Property<Guid>("TelephoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHardDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSoftDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("TelephoneName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TelephoneNumber")
                        .HasColumnType("bigint");

                    b.HasKey("TelephoneId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Telephone");
                });

            modelBuilder.Entity("ZR.Infrastructure.Models.Address", b =>
                {
                    b.HasOne("ZR.Infrastructure.Models.Company", "Company")
                        .WithMany("Addresses")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("ZR.Infrastructure.Models.Contact", b =>
                {
                    b.HasOne("ZR.Infrastructure.Models.Company", "Company")
                        .WithMany("Contacts")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("ZR.Infrastructure.Models.Telephone", b =>
                {
                    b.HasOne("ZR.Infrastructure.Models.Company", "Company")
                        .WithMany("Telephones")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("ZR.Infrastructure.Models.Company", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Contacts");

                    b.Navigation("Telephones");
                });
#pragma warning restore 612, 618
        }
    }
}
